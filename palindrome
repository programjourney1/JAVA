// This is my own bersion!
package Palindrome;

import java.util.*;

class Pala {
	public static char[] toChar(String f) {
		char[] ch = new char[f.length()];
        for (int i = 0; i < f.length(); i++) {
            ch[i] = f.charAt(i);
        }
		return ch;
		
	}
		
	public static char[] rev (char [] c) {
		 {
			 int len = c.length; 
			 for(int i = 0; i < len / 2; i++) {
			     char ch = c[i];
			     c[i] = c[len - i - 1];
			     c[len - i - 1] = ch;
			 }
		    }
		return c ;
	}
		
	public static String prod(String f) {
		String st = new String(f);
		return st;
	}	
			
		
		public static void main(String[] args) {
			String f = "toot";
			String ini1 = "pool";
			String d = prod(f);
			if (d.equals(f)) {
				System.out.println("yes");
			}else{
				System.out.println("no");
			}
		  }
//////////////////broken
package Palindrome;

import java.util.*;
import java.util.regex.Pattern;

public class Pala {
//checks if string is palindrome
	public static String bb (String x) {
		char[] try1 = x.toCharArray();
		  
        for (int i = try1.length - 1; i >= 0; i--)
            System.out.print(try1[i]);
        String s = new String(try1);
      String  ss= s.toLowerCase();
       return ss; 
		
	}
        	public static void main(String[] args) {  
  String g = " keep";
  if (g == bb(g)) {
  System.out.println(bb(g));}
        	}}
          // does not quite work and even though not == still prints?
	  /////////////////////REAL////////////////////
	  package Palindrome;


	class Pala {
		  public static void main(String[] args) {

		    String str = "Jeep", reverseStr = "";
		    
		    int strLength = str.length();

		    for (int i = (strLength - 1); i >=0; --i) {
		      reverseStr = reverseStr + str.charAt(i);
		    }

		    if (str.toLowerCase().equals(reverseStr.toLowerCase())) {
		      System.out.println(str + " is a Palindrome String.");
		    }
		    else {
		      System.out.println(str + " is not a Palindrome String.");
		    }
		  }}

